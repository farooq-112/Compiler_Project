1::(1, class, class)
2::(1, identifier, X)
3::(1, keyword, extends)
4::(1, identifier, Yes)
5::(1, comma, ,)
6::(1, keyword, implements)
7::(1, identifier, X)
8::(1, comma, ,)
9::(1, identifier, Farooq)
10::(1, {, {)
11::(2, mutable-constant, var)
12::(2, identifier, farooq)
13::(2, comma, ,)
14::(2, identifier, noor)
15::(2, comma, ,)
16::(2, identifier, abbas)
17::(2, colon, :)
18::(2, data-type, int)
19::(4, access-modifier, public)
20::(4, static, static)
21::(4, func, func)
22::(4, identifier, Q)
23::(4, (, ()
24::(4, identifier, x)
25::(4, colon, :)
26::(4, data-type, int)
27::(4, ), ))
28::(4, {, {)
29::(5, mutable-constant, var)
30::(5, identifier, i)
31::(5, colon, :)
32::(5, data-type, int)
33::(5, UnaryOperator, =)
34::(5, integer, 10)
35::(6, while, while)
36::(6, (, ()
37::(6, identifier, i)
38::(6, RelationalOperator, ==)
39::(6, integer, 2)
40::(6, ), ))
41::(6, {, {)
42::(7, }, })
43::(8, }, })
44::(9, init, init)
45::(9, (, ()
46::(9, identifier, x)
47::(9, colon, :)
48::(9, data-type, int)
49::(9, ), ))
50::(9, {, {)
51::(11, }, })
52::(13, deinit, deinit)
53::(13, {, {)
54::(15, }, })
55::(16, }, })
56::(18, struct, struct)
57::(18, identifier, X)
58::(18, keyword, extends)
59::(18, identifier, Yes)
60::(18, comma, ,)
61::(18, keyword, implements)
62::(18, identifier, X)
63::(18, comma, ,)
64::(18, identifier, Farooq)
65::(18, {, {)
66::(19, mutable-constant, var)
67::(19, identifier, farooq)
68::(19, comma, ,)
69::(19, identifier, noor)
70::(19, comma, ,)
71::(19, identifier, abbas)
72::(19, colon, :)
73::(19, data-type, int)
74::(21, access-modifier, public)
75::(21, static, static)
76::(21, func, func)
77::(21, identifier, Q)
78::(21, (, ()
79::(21, identifier, x)
80::(21, colon, :)
81::(21, data-type, int)
82::(21, ), ))
83::(21, {, {)
84::(22, mutable-constant, var)
85::(22, identifier, i)
86::(22, colon, :)
87::(22, data-type, int)
88::(22, UnaryOperator, =)
89::(22, integer, 10)
90::(23, }, })
91::(24, init, init)
92::(24, (, ()
93::(24, identifier, x)
94::(24, colon, :)
95::(24, data-type, int)
96::(24, ), ))
97::(24, {, {)
98::(26, }, })
99::(28, deinit, deinit)
100::(28, {, {)
101::(30, }, })
102::(31, }, })
103::(33, enum, enum)
104::(33, identifier, A)
105::(33, colon, :)
106::(33, data-type, int)
107::(33, {, {)
108::(34, keyword, case)
109::(34, identifier, X)
110::(35, keyword, case)
111::(35, identifier, Y)
112::(36, }, })
113::(39, func, func)
114::(39, identifier, work)
115::(39, (, ()
116::(39, identifier, x)
117::(39, colon, :)
118::(39, data-type, int)
119::(39, ), ))
120::(39, {, {)
121::(40, mutable-constant, var)
122::(40, identifier, i)
123::(40, colon, :)
124::(40, data-type, int)
125::(40, UnaryOperator, =)
126::(40, identifier, a)
127::(41, mutable-constant, var)
128::(41, identifier, i)
129::(41, colon, :)
130::(41, data-type, int)
131::(41, UnaryOperator, =)
132::(41, string, "str")
133::(42, mutable-constant, var)
134::(42, identifier, i)
135::(42, colon, :)
136::(42, data-type, int)
137::(42, UnaryOperator, =)
138::(43, }, })
139::(45, end-mark, $)
